{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Flood Susceptibility: Exploratory Data Analysis (EDA)\n",
    "\n",
    "This notebook explores the relationships between the engineered features and the target variable (`Class`). The goal is to understand the data distribution and correlations before training the machine learning model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Set plot style\n",
    "sns.set_style('whitegrid')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Load the Processed Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('../data/processed/final_training_data_SAMPLE.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Summary Statistics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Visualize Feature Distributions\n",
    "\n",
    "Histograms help us see the distribution of each feature for both flood (`Class=1`) and no-flood (`Class=0`) points."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "features = ['Elevation', 'Slope', 'TWI', 'Dist_to_Rivers']\n",
    "\n",
    "for feature in features:\n",
    "    plt.figure(figsize=(10, 5))\n",
    "    sns.histplot(data=df, x=feature, hue='Class', kde=True, palette='viridis')\n",
    "    plt.title(f'Distribution of {feature} by Flood Class', fontsize=16)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Observations:**\n",
    "* **Elevation:** There's a clear separation. Flood points (Class 1) are clustered at low elevations, while no-flood points (Class 0) are at high elevations.\n",
    "* **Distance to Rivers:** Flood points are much closer to rivers (low distance values).\n",
    "* **TWI:** Flood points have significantly higher TWI values, as expected."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. Correlation Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure(figsize=(12, 8))\n",
    "corr = df.corr()\n",
    "sns.heatmap(corr, annot=True, cmap='coolwarm', fmt='.2f')\n",
    "plt.title('Feature Correlation Matrix', fontsize=16)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Observations:**\n",
    "* `Class` is strongly negatively correlated with `Elevation` and `Dist_to_Rivers`, meaning as these values go down, the likelihood of flooding goes up.\n",
    "* `Class` is strongly positively correlated with `TWI`, meaning as TWI increases, so does the likelihood of flooding.\n",
    "* This confirms that our chosen features have a strong predictive relationship with the target variable."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
